salaries <- data.frame(
emploees,
salary_2017,
salary_adjustment,
stringAsFactors = FALSE
)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salary_2017,
salary_adjustment,
stringAsFactors = FALSE
)
View(salaries)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salary_2017,
salary_adjustment,
stringsAsFactors = FALSE
)
View(salaries)
View(salaries)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries&salaries_2017 + salaries_adjustment
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", (1:100))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100, 40000, 50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salaries_adjustment <- runif(100, -5000, 10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salary_2017,
salary_adjustment,
stringsAsFactors = FALSE
)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries&salaries_2017 + salaries_adjustment
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2018 salary of Employee 57
# How many employees got a raise?
# What was the dollar value of the highest raise?
# What was the "name" of the employee who received the highest raise?
# What was the largest decrease in salaries between the two years?
# What was the name of the employee who recieved largest decrease in salary?
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", (1:100))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100, 40000, 50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salaries_adjustment <- runif(100, -5000, 10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salaries_2017,
salaries_adjustment,
stringsAsFactors = FALSE
)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries&salaries_2017 + salaries_adjustment
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2018 salary of Employee 57
# How many employees got a raise?
# What was the dollar value of the highest raise?
# What was the "name" of the employee who received the highest raise?
# What was the largest decrease in salaries between the two years?
# What was the name of the employee who recieved largest decrease in salary?
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
View(salaries)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries&salaries_2017 + salaries$salaries_adjustment
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries&salaries_2017 + salaries$salaries_adjustment
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salaries_2017,
salaries_adjustment,
stringsAsFactors = FALSE
)
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raised <- salaries_adjustment > 0
View(salaries)
View(salaries)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries&salaries_2017 + salaries$salaries_adjustment
# What was the 2018 salary of Employee 57
employess[57, salaries_2018]
# What was the 2018 salary of Employee 57
employees[57, salaries_2018]
# What was the 2018 salary of Employee 57
employees[57, "salaries_2018"]
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salaries_adjustment
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", (1:100))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100, 40000, 50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salaries_adjustment <- runif(100, -5000, 10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salaries_2017,
salaries_adjustment,
stringsAsFactors = FALSE
)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salaries_adjustment
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raised <- salaries_adjustment > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2018 salary of Employee 57
employees[57, "salaries_2018"]
employees$salaries_2018[57]
# How many employees got a raise?
# What was the dollar value of the highest raise?
# What was the "name" of the employee who received the highest raise?
# What was the largest decrease in salaries between the two years?
# What was the name of the employee who recieved largest decrease in salary?
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", (1:100))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- runif(100, 40000, 50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salaries_adjustment <- runif(100, -5000, 10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salaries_2017,
salaries_adjustment,
stringsAsFactors = FALSE
)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salaries_adjustment
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raised <- salaries_adjustment > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2018 salary of Employee 57
employees[57, "salaries_2018"]
employees$salaries_2018[57]
# How many employees got a raise?
# What was the dollar value of the highest raise?
# What was the "name" of the employee who received the highest raise?
# What was the largest decrease in salaries between the two years?
# What was the name of the employee who recieved largest decrease in salary?
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
View(salaries)
View(salaries)
# How many employees got a raise?
# watch out for boolean zen (if it's a thing here...)
nrow(salaries[salaries$got_raised])
# How many employees got a raise?
# watch out for boolean zen (if it's a thing here...)
nrow(salaries[salaries$got_raised])
# How many employees got a raise?
# watch out for boolean zen (if it's a thing here...)
nrow(salaries$got_raised)
# How many employees got a raise?
# watch out for boolean zen (if it's a thing here...)
nrow(salaries[salaries$got_raised, ])
# What was the dollar value of the highest raise?
max(salaries$salaries_adjustment)
salaries[salaries_adjustment == max(salaries$salaries_adjustment), ]
# What was the "name" of the employee who received the highest raise?
salaries[salaries_adjustment == max(salaries$salaries_adjustment), employees]
# What was the "name" of the employee who received the highest raise?
salaries[salaries_adjustment == max(salaries$salaries_adjustment), "employees"]
# How many employees got a raise?
# watch out for boolean zen (if it's a thing here...)
nrow(salaries[salaries$got_raised, ])
# What was the dollar value of the highest raise?
max(salaries$salaries_adjustment)
employees$salaries_2018[57]
# What was the 2018 salary of Employee 57
employees[57, "salaries_2018"]
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salaries_adjustment == max(salaries$salaries_adjustment), "employees"]
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", (1:100))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- round(runif(100, 40000, 50000))
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salaries_adjustment <- round(runif(100, -5000, 10000))
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salaries_2017,
salaries_adjustment,
stringsAsFactors = FALSE
)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salaries_adjustment
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raised <- salaries_adjustment > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2018 salary of Employee 57
employees[57, "salaries_2018"]
employees$salaries_2018[57]
# How many employees got a raise?
# watch out for boolean zen (if it's a thing here...)
nrow(salaries[salaries$got_raised, ])
# What was the dollar value of the highest raise?
max(salaries$salaries_adjustment)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salaries_adjustment == max(salaries$salaries_adjustment), "employees"]
# What was the largest decrease in salaries between the two years?
# What was the name of the employee who recieved largest decrease in salary?
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
data()
# What was the largest decrease in salaries between the two years?
salaries[salaries$salaries_adjustment == min(salaries$salaries_adjustment), "employees"]
salaries[33, salarie]
salaries[33, "salaries_adjustment"]
# What was the 2018 salary of Employee 57 <-------------this is not wroking....
employees[57, salaries_2018]
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", (1:100))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- round(runif(100, 40000, 50000))
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salaries_adjustment <- round(runif(100, -5000, 10000))
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salaries_2017,
salaries_adjustment,
stringsAsFactors = FALSE
)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salaries_adjustment
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raised <- salaries_adjustment > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2018 salary of Employee 57 <-------------this is not wroking....
employees[57, salaries_2018]
employees$salaries_2018[57]
# How many employees got a raise?
# watch out for boolean zen (if it's a thing here...)
nrow(salaries[salaries$got_raised, ])
# What was the dollar value of the highest raise?
max(salaries$salaries_adjustment)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salaries_adjustment == max(salaries$salaries_adjustment), "employees"]
# What was the largest decrease in salaries between the two years?
salaries[salaries$salaries_adjustment == min(salaries$salaries_adjustment), "employees"]
# What was the name of the employee who recieved largest decrease in salary?
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
# What was the 2018 salary of Employee 57 <-------------this is not wroking....
employees[57, salaries_2018]
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salaries_adjustment
# What was the 2018 salary of Employee 57 <-------------this is not wroking....
employees[57, salaries$salaries_2018]
# What was the 2018 salary of Employee 57 <-------------this is not wroking....
employees[57, salaries$salaries_2018]
View(salaries)
View(salaries)
# What was the 2018 salary of Employee 57 <-------------this is not wroking....
employees[57, salaries$salaries_2018]
salaries[salaries$salaries_adjustment == min(salaries$salaries_adjustment), "employees"]
# What was the largest decrease in salaries between the two years?
min(salaries$salaries_adjustment)
# What was the 2018 salary of Employee 57 <-------------this is not wroking....
employees[57, salaries$salaries_2018]
# What was the 2018 salary of Employee 57 <-------------this is not wroking....
employees[57, "salaries_2018"]
# What was the 2018 salary of Employee 57
employees[57, "salaries_2018"]
# What was the 2018 salary of Employee 57
employees["57, "salaries_2018"]
# What was the 2018 salary of Employee 57
employees["57", "salaries_2018"]
# What was the 2018 salary of Employee 57
employees[57, "salaries_2018"]
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", (1:100))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries_2017 <- round(runif(100, 40000, 50000))
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salaries_adjustment <- round(runif(100, -5000, 10000))
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(
employees,
salaries_2017,
salaries_adjustment,
stringsAsFactors = FALSE
)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salaries_2018 <- salaries$salaries_2017 + salaries$salaries_adjustment
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$got_raised <- salaries_adjustment > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2018 salary of Employee 57
employees[57, "salaries_2018"]
# How many employees got a raise?
# watch out for boolean zen (if it's a thing here...)
nrow(salaries[salaries$got_raised, ])
# What was the dollar value of the highest raise?
max(salaries$salaries_adjustment)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salaries_adjustment == max(salaries$salaries_adjustment), "employees"]
# What was the largest decrease in salaries between the two years?
min(salaries$salaries_adjustment)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$salaries_adjustment == min(salaries$salaries_adjustment), "employees"]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
# What was the 2018 salary of Employee 57
salaries[57, "salaries_2018"]
# What was the average salary change?
mean(salaries_adjustment)
# For people who did not get a raise, how much money did they lose on average?
mean(salaries$salaries_adjustment[salaries_adjustment < 0])
# Write a .csv file of your salary data to your working directory
?write.csv()
# Write a .csv file of your salary data to your working directory
write.csv(salaries, file = "salaries.csv", row.name = FALSE)
# Write a .csv file of your salary data to your working directory
write.csv(salaries, "salaries.csv", row.name = FALSE)
# Write a .csv file of your salary data to your working directory
write.csv(salaries, "salaries.csv", row.names = FALSE)
# Write a .csv file of your salary data to your working directory
getwd()
setwd("E:/University of Washington/Info 201/Repos/exercises/chapter-10-exercises/exercise-2")
# Write a .csv file of your salary data to your working directory
write.csv(salaries, "salaries.csv", row.names = FALSE)
setwd("E:/University of Washington/Info 201/Repos/exercises/chapter-10-exercises/exercise-4")
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
gates_money <- read.csv("./data/gates_money.csv")
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
gates_money <- read.csv("./data/gates_money.csv")
# Use the View function to look at the loaded data
View(gates_money)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money[, "organizatino"]
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money[, "organization"]
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organization)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
gates_money <- read.csv("./data/gates_money.csv", stringsAsFactors = FALSE)
# Use the View function to look at the loaded data
View(gates_money)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- gates_money[, "organization"]
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organization)
# What was the mean grant value?
mean(gates_money$total_amount)
# What was the dollar amount of the largest grant?
max(gates_money$total_amount)
# What was the dollar amount of the smallest grant?
min(gates_money$total_amount)
# Which organization received the largest grant?
organization[organization == max(gates_money$total_amount)]
# Which organization received the largest grant?
organization[organization == max(gates_money$total_amount)]
# Which organization received the largest grant?
organization[max(gates_money$total_amount)]
# Which organization received the largest grant?
gates_money[organization, gates_money$total_amount == max(gates_money$total_amount)]
# Which organization received the largest grant?
gates_money[gates_money$total_amount == max(gates_money$total_amount), organization]
# Which organization received the largest grant?
gates_money[gates_money$total_amount == max(gates_money$total_amount), "organization"]
# Which organization received the smallest grant?
gates_money[gates_money$total_amount == min(gates_money$total_amount), "organization"]
# How many grants were awarded in 2010?
nrow(gates_money[ ,gates_money$start_year == 2010])
# How many grants were awarded in 2010?
nrow(gates_money[ ,gates_money$start_year == 2010])?
# How many grants were awarded in 2010?
?nrow(gates_money[ ,gates_money$start_year == 2010])
# How many grants were awarded in 2010?
nrow(gates_money[gates_money$start_year == 2010 ,])
